syntax = "proto3";

import "google/protobuf/timestamp.proto";    // 시각
import "google/protobuf/empty.proto";        // 빈 응답의 명시
import "Protos/v1/Base/loc.proto";
import "Protos/v1/Redis/redis.proto";
import "Protos/v1/RoutePlanner/routeplan.proto";
import "Protos/v1/Dispatcher/supply.proto";
import "Protos/v1/TripPlanner/tripplanner.proto";

option csharp_namespace = "Protos.v1.FrontEnd";

package frontend;

service UserService{
	rpc GetUserState(google.protobuf.Empty) returns (stream UserStateResponse);
}

service SupplyService{
	rpc GetSupplyState(google.protobuf.Empty) returns (stream SupplyStateResponse);
	rpc SetSupplyLocation(stream SupplyLocationRequest) returns (google.protobuf.Empty);
    rpc GetSupplyLocation(stream GetSupplyLocationRequest) returns (SupplyLocationResponse);
}

service FrontEnd{
	//rpc SetUserState(redis.UserState) returns (google.protobuf.Empty);
	//rpc SetSupplyState(redis.SupplyState) returns (google.protobuf.Empty);
	
	//rpc SetSupplyWaypoint(supply.Supply) returns (google.protobuf.Empty);
	//rpc SetSupplyWaypointEta(redis.SupplyWaypointEtas) returns (google.protobuf.Empty);
	//rpc SetSupplyWaypointPath(redis.SupplyWaypointPaths) returns (google.protobuf.Empty);

	rpc SetDispatch(FrontEndDispatchRequest) returns (google.protobuf.Empty);
	rpc SetDispatchCancel(SetDispatchCancelRequest) returns (google.protobuf.Empty);
	//rpc SetArrivalWaypoint(SetArrivalWaypointRequest) returns (google.protobuf.Empty);	

}

message UserStateRequest{
	int32 UserIdx = 1;
}

message UserStateResponse{
	repeated UserStateWithInfo user_state_with_info = 1;
}
message UserStateWithInfo
{
	redis.UserState user_state = 1;

	VehicleInfo vehicle_info = 6;

	loc.LngLat from_lng_lat = 7;	
	tripplanner.Path from_walk_path = 8;
	loc.LngLat to_lng_lat = 9;
	tripplanner.Path to_walk_path = 10;

	string item_detail = 11;
	
	google.protobuf.Timestamp pick_up_eta = 12;
	google.protobuf.Timestamp drop_off_eta = 13;

	repeated redis.SupplyWaypoint supply_waypoint_list = 14;
	repeated loc.Path supply_waypoint_path_list = 15;

	int32 pick_up_path_seq = 16;
	int32 drop_off_path_seq = 17;

	google.protobuf.Timestamp supply_waypoint_version = 18;
	google.protobuf.Timestamp supply_waypoint_eta_version = 19;
	google.protobuf.Timestamp supply_waypoint_path_version = 20;

}

message GetSupplyLocationRequest{
	int32 supply_idx = 1;
}

message SupplyStateResponse{	
	repeated redis.SupplyState supply_state = 1;	

	repeated redis.SupplyWaypoint supply_waypoint_list = 2;
	repeated redis.SupplyWaypointEta supply_waypoint_eta_list = 3;
	repeated redis.SupplyWaypointPath supply_waypoint_path_list = 4;
	
	google.protobuf.Timestamp supply_waypoint_version = 5;
	google.protobuf.Timestamp supply_waypoint_eta_version = 6;
	google.protobuf.Timestamp supply_waypoint_path_version = 7;

	int32 recent_stop_idx = 8;
	int32 visit_type = 9;
}

message SupplyLocationRequest{
    loc.Loc loc = 1;
}

message SupplyLocationResponse{    
	redis.SupplyLocationMatched supply_locationMatched = 1;
}

message FrontEndDispatchRequest{
	int32 user_idx = 1;
	int32 region_code = 2;
	int32 item_count = 3;
	string item_type = 4;
	string item_detail = 5;
	string demand_type = 6;
	int32 pick_up_stop_idx = 7;
	int32 drop_off_stop_idx = 8;
	string from_walk_path = 9;
	string to_walk_path = 10;
	loc.LngLat from_lng_lat = 11;
	string from_poi = 12;
	loc.LngLat to_lng_lat = 13;
	string to_poi = 14;
	loc.LngLat pick_up_lng_lat = 15;
	string pick_up_poi = 16;
	loc.LngLat drop_off_lng_lat = 17;
	string drop_off_poi = 18;
}

message FrontEndDispatchResponse{
	bool is_success = 1;
}

message VehicleInfo{
	int32 supply_id =1;
	loc.LngLat supply_loc =2;
	float direction = 3;
	float speed = 4;
	string supply_name = 5;
	string number_plate = 6;
	string driver_name = 7;
	string drvier_image_url = 8;
}

message DemandWaypoint{
	int32 seq = 1;
	int32 stop_idx = 2;
	string name = 3;
	loc.LngLat waypoint_lng_lat = 4;
	DemandWaypointType waypoint_type = 5;
}
	
enum DemandWaypointType {
	PICK_UP_POINT = 0;
	DROP_OFF_POINT = 1;
	WAYPOINT = 2;
	DEPARTURE_POINT = 3;
	ARRIVAL_POINT = 4;
}

message SetDispatchCancelRequest{
	int32 user_idx = 1;
	int32 region_code = 2;
	string demand_id =3;
}

message SetArrivalWaypointRequest{
	int32 supply_idx = 1;
	int32 stop_idx = 2;
	int32 region_code = 3;
}